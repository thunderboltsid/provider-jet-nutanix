//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoriesObservation) DeepCopyInto(out *CategoriesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoriesObservation.
func (in *CategoriesObservation) DeepCopy() *CategoriesObservation {
	if in == nil {
		return nil
	}
	out := new(CategoriesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoriesParameters) DeepCopyInto(out *CategoriesParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoriesParameters.
func (in *CategoriesParameters) DeepCopy() *CategoriesParameters {
	if in == nil {
		return nil
	}
	out := new(CategoriesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicePropertiesObservation) DeepCopyInto(out *DevicePropertiesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicePropertiesObservation.
func (in *DevicePropertiesObservation) DeepCopy() *DevicePropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(DevicePropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicePropertiesParameters) DeepCopyInto(out *DevicePropertiesParameters) {
	*out = *in
	if in.DeviceType != nil {
		in, out := &in.DeviceType, &out.DeviceType
		*out = new(string)
		**out = **in
	}
	if in.DiskAddress != nil {
		in, out := &in.DiskAddress, &out.DiskAddress
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicePropertiesParameters.
func (in *DevicePropertiesParameters) DeepCopy() *DevicePropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(DevicePropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskListObservation) DeepCopyInto(out *DiskListObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskListObservation.
func (in *DiskListObservation) DeepCopy() *DiskListObservation {
	if in == nil {
		return nil
	}
	out := new(DiskListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskListParameters) DeepCopyInto(out *DiskListParameters) {
	*out = *in
	if in.DataSourceReference != nil {
		in, out := &in.DataSourceReference, &out.DataSourceReference
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DeviceProperties != nil {
		in, out := &in.DeviceProperties, &out.DeviceProperties
		*out = make([]DevicePropertiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskSizeBytes != nil {
		in, out := &in.DiskSizeBytes, &out.DiskSizeBytes
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeMib != nil {
		in, out := &in.DiskSizeMib, &out.DiskSizeMib
		*out = new(float64)
		**out = **in
	}
	if in.StorageConfig != nil {
		in, out := &in.StorageConfig, &out.StorageConfig
		*out = make([]StorageConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupReference != nil {
		in, out := &in.VolumeGroupReference, &out.VolumeGroupReference
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskListParameters.
func (in *DiskListParameters) DeepCopy() *DiskListParameters {
	if in == nil {
		return nil
	}
	out := new(DiskListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuListObservation) DeepCopyInto(out *GpuListObservation) {
	*out = *in
	if in.Fraction != nil {
		in, out := &in.Fraction, &out.Fraction
		*out = new(float64)
		**out = **in
	}
	if in.FrameBufferSizeMib != nil {
		in, out := &in.FrameBufferSizeMib, &out.FrameBufferSizeMib
		*out = new(float64)
		**out = **in
	}
	if in.GuestDriverVersion != nil {
		in, out := &in.GuestDriverVersion, &out.GuestDriverVersion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumVirtualDisplayHeads != nil {
		in, out := &in.NumVirtualDisplayHeads, &out.NumVirtualDisplayHeads
		*out = new(float64)
		**out = **in
	}
	if in.PciAddress != nil {
		in, out := &in.PciAddress, &out.PciAddress
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuListObservation.
func (in *GpuListObservation) DeepCopy() *GpuListObservation {
	if in == nil {
		return nil
	}
	out := new(GpuListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuListParameters) DeepCopyInto(out *GpuListParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Vendor != nil {
		in, out := &in.Vendor, &out.Vendor
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuListParameters.
func (in *GpuListParameters) DeepCopy() *GpuListParameters {
	if in == nil {
		return nil
	}
	out := new(GpuListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPEndpointListObservation) DeepCopyInto(out *IPEndpointListObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPEndpointListObservation.
func (in *IPEndpointListObservation) DeepCopy() *IPEndpointListObservation {
	if in == nil {
		return nil
	}
	out := new(IPEndpointListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPEndpointListParameters) DeepCopyInto(out *IPEndpointListParameters) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPEndpointListParameters.
func (in *IPEndpointListParameters) DeepCopy() *IPEndpointListParameters {
	if in == nil {
		return nil
	}
	out := new(IPEndpointListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Machine) DeepCopyInto(out *Machine) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Machine.
func (in *Machine) DeepCopy() *Machine {
	if in == nil {
		return nil
	}
	out := new(Machine)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Machine) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineList) DeepCopyInto(out *MachineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Machine, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineList.
func (in *MachineList) DeepCopy() *MachineList {
	if in == nil {
		return nil
	}
	out := new(MachineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MachineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineObservation) DeepCopyInto(out *MachineObservation) {
	*out = *in
	if in.APIVersion != nil {
		in, out := &in.APIVersion, &out.APIVersion
		*out = new(string)
		**out = **in
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.HostReference != nil {
		in, out := &in.HostReference, &out.HostReference
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HypervisorType != nil {
		in, out := &in.HypervisorType, &out.HypervisorType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NicListStatus != nil {
		in, out := &in.NicListStatus, &out.NicListStatus
		*out = make([]NicListStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PowerState != nil {
		in, out := &in.PowerState, &out.PowerState
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineObservation.
func (in *MachineObservation) DeepCopy() *MachineObservation {
	if in == nil {
		return nil
	}
	out := new(MachineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineParameters) DeepCopyInto(out *MachineParameters) {
	*out = *in
	if in.AvailabilityZoneReference != nil {
		in, out := &in.AvailabilityZoneReference, &out.AvailabilityZoneReference
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.BootDeviceDiskAddress != nil {
		in, out := &in.BootDeviceDiskAddress, &out.BootDeviceDiskAddress
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.BootDeviceMacAddress != nil {
		in, out := &in.BootDeviceMacAddress, &out.BootDeviceMacAddress
		*out = new(string)
		**out = **in
	}
	if in.BootDeviceOrderList != nil {
		in, out := &in.BootDeviceOrderList, &out.BootDeviceOrderList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BootType != nil {
		in, out := &in.BootType, &out.BootType
		*out = new(string)
		**out = **in
	}
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]CategoriesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudInitCdromUUID != nil {
		in, out := &in.CloudInitCdromUUID, &out.CloudInitCdromUUID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUUID != nil {
		in, out := &in.ClusterUUID, &out.ClusterUUID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskList != nil {
		in, out := &in.DiskList, &out.DiskList
		*out = make([]DiskListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableCPUPassthrough != nil {
		in, out := &in.EnableCPUPassthrough, &out.EnableCPUPassthrough
		*out = new(bool)
		**out = **in
	}
	if in.EnableScriptExec != nil {
		in, out := &in.EnableScriptExec, &out.EnableScriptExec
		*out = new(bool)
		**out = **in
	}
	if in.GpuList != nil {
		in, out := &in.GpuList, &out.GpuList
		*out = make([]GpuListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GuestCustomizationCloudInitCustomKeyValues != nil {
		in, out := &in.GuestCustomizationCloudInitCustomKeyValues, &out.GuestCustomizationCloudInitCustomKeyValues
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.GuestCustomizationCloudInitMetaData != nil {
		in, out := &in.GuestCustomizationCloudInitMetaData, &out.GuestCustomizationCloudInitMetaData
		*out = new(string)
		**out = **in
	}
	if in.GuestCustomizationCloudInitUserData != nil {
		in, out := &in.GuestCustomizationCloudInitUserData, &out.GuestCustomizationCloudInitUserData
		*out = new(string)
		**out = **in
	}
	if in.GuestCustomizationIsOverridable != nil {
		in, out := &in.GuestCustomizationIsOverridable, &out.GuestCustomizationIsOverridable
		*out = new(bool)
		**out = **in
	}
	if in.GuestCustomizationSysprep != nil {
		in, out := &in.GuestCustomizationSysprep, &out.GuestCustomizationSysprep
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.GuestCustomizationSysprepCustomKeyValues != nil {
		in, out := &in.GuestCustomizationSysprepCustomKeyValues, &out.GuestCustomizationSysprepCustomKeyValues
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.GuestOsID != nil {
		in, out := &in.GuestOsID, &out.GuestOsID
		*out = new(string)
		**out = **in
	}
	if in.HardwareClockTimezone != nil {
		in, out := &in.HardwareClockTimezone, &out.HardwareClockTimezone
		*out = new(string)
		**out = **in
	}
	if in.IsVcpuHardPinned != nil {
		in, out := &in.IsVcpuHardPinned, &out.IsVcpuHardPinned
		*out = new(bool)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MemorySizeMib != nil {
		in, out := &in.MemorySizeMib, &out.MemorySizeMib
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NgtCredentials != nil {
		in, out := &in.NgtCredentials, &out.NgtCredentials
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NgtEnabledCapabilityList != nil {
		in, out := &in.NgtEnabledCapabilityList, &out.NgtEnabledCapabilityList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NicList != nil {
		in, out := &in.NicList, &out.NicList
		*out = make([]NicListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NumSockets != nil {
		in, out := &in.NumSockets, &out.NumSockets
		*out = new(float64)
		**out = **in
	}
	if in.NumVcpusPerSocket != nil {
		in, out := &in.NumVcpusPerSocket, &out.NumVcpusPerSocket
		*out = new(float64)
		**out = **in
	}
	if in.NumVnumaNodes != nil {
		in, out := &in.NumVnumaNodes, &out.NumVnumaNodes
		*out = new(float64)
		**out = **in
	}
	if in.NutanixGuestTools != nil {
		in, out := &in.NutanixGuestTools, &out.NutanixGuestTools
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OwnerReference != nil {
		in, out := &in.OwnerReference, &out.OwnerReference
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ParentReference != nil {
		in, out := &in.ParentReference, &out.ParentReference
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PowerStateMechanism != nil {
		in, out := &in.PowerStateMechanism, &out.PowerStateMechanism
		*out = new(string)
		**out = **in
	}
	if in.ProjectReference != nil {
		in, out := &in.ProjectReference, &out.ProjectReference
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SerialPortList != nil {
		in, out := &in.SerialPortList, &out.SerialPortList
		*out = make([]SerialPortListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShouldFailOnScriptFailure != nil {
		in, out := &in.ShouldFailOnScriptFailure, &out.ShouldFailOnScriptFailure
		*out = new(bool)
		**out = **in
	}
	if in.UseHotAdd != nil {
		in, out := &in.UseHotAdd, &out.UseHotAdd
		*out = new(bool)
		**out = **in
	}
	if in.VgaConsoleEnabled != nil {
		in, out := &in.VgaConsoleEnabled, &out.VgaConsoleEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineParameters.
func (in *MachineParameters) DeepCopy() *MachineParameters {
	if in == nil {
		return nil
	}
	out := new(MachineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineSpec) DeepCopyInto(out *MachineSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineSpec.
func (in *MachineSpec) DeepCopy() *MachineSpec {
	if in == nil {
		return nil
	}
	out := new(MachineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineStatus) DeepCopyInto(out *MachineStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineStatus.
func (in *MachineStatus) DeepCopy() *MachineStatus {
	if in == nil {
		return nil
	}
	out := new(MachineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NicListObservation) DeepCopyInto(out *NicListObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NicListObservation.
func (in *NicListObservation) DeepCopy() *NicListObservation {
	if in == nil {
		return nil
	}
	out := new(NicListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NicListParameters) DeepCopyInto(out *NicListParameters) {
	*out = *in
	if in.IPEndpointList != nil {
		in, out := &in.IPEndpointList, &out.IPEndpointList
		*out = make([]IPEndpointListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsConnected != nil {
		in, out := &in.IsConnected, &out.IsConnected
		*out = new(string)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.NetworkFunctionChainReference != nil {
		in, out := &in.NetworkFunctionChainReference, &out.NetworkFunctionChainReference
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NetworkFunctionNicType != nil {
		in, out := &in.NetworkFunctionNicType, &out.NetworkFunctionNicType
		*out = new(string)
		**out = **in
	}
	if in.NicType != nil {
		in, out := &in.NicType, &out.NicType
		*out = new(string)
		**out = **in
	}
	if in.NumQueues != nil {
		in, out := &in.NumQueues, &out.NumQueues
		*out = new(float64)
		**out = **in
	}
	if in.SubnetName != nil {
		in, out := &in.SubnetName, &out.SubnetName
		*out = new(string)
		**out = **in
	}
	if in.SubnetUUID != nil {
		in, out := &in.SubnetUUID, &out.SubnetUUID
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NicListParameters.
func (in *NicListParameters) DeepCopy() *NicListParameters {
	if in == nil {
		return nil
	}
	out := new(NicListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NicListStatusIPEndpointListObservation) DeepCopyInto(out *NicListStatusIPEndpointListObservation) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NicListStatusIPEndpointListObservation.
func (in *NicListStatusIPEndpointListObservation) DeepCopy() *NicListStatusIPEndpointListObservation {
	if in == nil {
		return nil
	}
	out := new(NicListStatusIPEndpointListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NicListStatusIPEndpointListParameters) DeepCopyInto(out *NicListStatusIPEndpointListParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NicListStatusIPEndpointListParameters.
func (in *NicListStatusIPEndpointListParameters) DeepCopy() *NicListStatusIPEndpointListParameters {
	if in == nil {
		return nil
	}
	out := new(NicListStatusIPEndpointListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NicListStatusObservation) DeepCopyInto(out *NicListStatusObservation) {
	*out = *in
	if in.FloatingIP != nil {
		in, out := &in.FloatingIP, &out.FloatingIP
		*out = new(string)
		**out = **in
	}
	if in.IPEndpointList != nil {
		in, out := &in.IPEndpointList, &out.IPEndpointList
		*out = make([]NicListStatusIPEndpointListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsConnected != nil {
		in, out := &in.IsConnected, &out.IsConnected
		*out = new(string)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.NetworkFunctionChainReference != nil {
		in, out := &in.NetworkFunctionChainReference, &out.NetworkFunctionChainReference
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NetworkFunctionNicType != nil {
		in, out := &in.NetworkFunctionNicType, &out.NetworkFunctionNicType
		*out = new(string)
		**out = **in
	}
	if in.NicType != nil {
		in, out := &in.NicType, &out.NicType
		*out = new(string)
		**out = **in
	}
	if in.NumQueues != nil {
		in, out := &in.NumQueues, &out.NumQueues
		*out = new(float64)
		**out = **in
	}
	if in.SubnetName != nil {
		in, out := &in.SubnetName, &out.SubnetName
		*out = new(string)
		**out = **in
	}
	if in.SubnetUUID != nil {
		in, out := &in.SubnetUUID, &out.SubnetUUID
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NicListStatusObservation.
func (in *NicListStatusObservation) DeepCopy() *NicListStatusObservation {
	if in == nil {
		return nil
	}
	out := new(NicListStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NicListStatusParameters) DeepCopyInto(out *NicListStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NicListStatusParameters.
func (in *NicListStatusParameters) DeepCopy() *NicListStatusParameters {
	if in == nil {
		return nil
	}
	out := new(NicListStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerialPortListObservation) DeepCopyInto(out *SerialPortListObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerialPortListObservation.
func (in *SerialPortListObservation) DeepCopy() *SerialPortListObservation {
	if in == nil {
		return nil
	}
	out := new(SerialPortListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerialPortListParameters) DeepCopyInto(out *SerialPortListParameters) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(float64)
		**out = **in
	}
	if in.IsConnected != nil {
		in, out := &in.IsConnected, &out.IsConnected
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerialPortListParameters.
func (in *SerialPortListParameters) DeepCopy() *SerialPortListParameters {
	if in == nil {
		return nil
	}
	out := new(SerialPortListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageConfigObservation) DeepCopyInto(out *StorageConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageConfigObservation.
func (in *StorageConfigObservation) DeepCopy() *StorageConfigObservation {
	if in == nil {
		return nil
	}
	out := new(StorageConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageConfigParameters) DeepCopyInto(out *StorageConfigParameters) {
	*out = *in
	if in.FlashMode != nil {
		in, out := &in.FlashMode, &out.FlashMode
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerReference != nil {
		in, out := &in.StorageContainerReference, &out.StorageContainerReference
		*out = make([]StorageContainerReferenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageConfigParameters.
func (in *StorageConfigParameters) DeepCopy() *StorageConfigParameters {
	if in == nil {
		return nil
	}
	out := new(StorageConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageContainerReferenceObservation) DeepCopyInto(out *StorageContainerReferenceObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageContainerReferenceObservation.
func (in *StorageContainerReferenceObservation) DeepCopy() *StorageContainerReferenceObservation {
	if in == nil {
		return nil
	}
	out := new(StorageContainerReferenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageContainerReferenceParameters) DeepCopyInto(out *StorageContainerReferenceParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageContainerReferenceParameters.
func (in *StorageContainerReferenceParameters) DeepCopy() *StorageContainerReferenceParameters {
	if in == nil {
		return nil
	}
	out := new(StorageContainerReferenceParameters)
	in.DeepCopyInto(out)
	return out
}
